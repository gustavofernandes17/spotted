{"version":3,"sources":["src/services/api.ts","src/pages/Main/styles.ts","src/components/Card/styles.ts","src/components/Card/index.tsx","src/contexts/app.context.tsx","src/pages/Main/index.tsx","src/pages/CreateSpotted/styles.ts","src/pages/CreateSpotted/index.tsx","src/routes/index.tsx","App.tsx","assets/icon.png"],"names":["api","axios","create","baseURL","Header","styled","View","HeaderImage","Image","CreateSpottedButton","TouchableOpacity","SearchInput","TextInput","TitleBrand","Text","Container","Constants","statusBarHeight","TextBackground","Content","Card","date_created","content","image_url","style","borderRadius","ImageBackground","source","uri","width","height","justifyContent","imageStyle","alignSelf","fontFamily","marginTop","fontSize","formatRelative","Date","locale","pt","ApplicationContext","createContext","useAppContext","useContext","ApplicationContextProvider","children","useState","spotteds","setSpotteds","showSpotteds","setShowSpotteds","socket","setSocket","useEffect","io","on","data","current_spotteds","current_filtered_spotteds","a","async","get","response","reverse","alert","console","log","fetchSpotteds","Provider","value","filteredSpotteds","setFilteredSpotteds","Main","navigation","useNavigation","searchQuery","setSearchQuery","refreshing","setRefreshing","handleRefresh","React","useCallback","require","onPress","navigate","Feather","name","size","color","placeholder","onChangeText","text","updateData","filter","item","itemData","toUpperCase","textData","indexOf","handleSearchSpotted","FlatList","renderItem","refreshControl","RefreshControl","onRefresh","BrandContainer","ArrowBackButton","BrandTitle","Title","TextContainer","Subtitle","TextArea","Button","ButtonText","CreateSpotted","spottedContent","setSpottedContent","handleSendSpottedContent","emit","goBack","err","multiline","numberOfLines","textAlignVertical","length","Alert","cancelable","onDismiss","Stack","createStackNavigator","Routes","NavigationContainer","Navigator","initialRouteName","Screen","component","options","headerShown","App","useFonts","Lato_400Regular","Lato_700Bold","Lato_900Black","module","exports"],"mappings":"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","file":"static/js/app.1141cc07.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nconst api = axios.create({\n  baseURL: 'https://spotted-wednesday.herokuapp.com/'\n}); \n\nexport default api; ","import styled from 'styled-components/native';\n\nimport Constants from 'expo-constants'\n\n\nexport const Header = styled.View`\n  height: 60px;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #F8F9FA;\n  padding: 0 24px ;\n`;\n\nexport const HeaderImage = styled.Image`\n  height: 35px;\n  width: 35px;\n  border-radius: 25px;\n`; \n\nexport const CreateSpottedButton = styled.TouchableOpacity`\n`; \n\nexport const SearchInput = styled.TextInput`\n\n  /* height: 50px; */\n  width: 350px;\n\n  border: solid 1px #ADB5BD; \n  border-radius: 25px;\n\n  align-self: center;\n\n  padding: 20px;\n  font-family: 'Lato_400Regular';\n  \n  margin-top: 24px;\n  font-size: 18px;\n  margin-bottom: 15px;\n\n  &:focus-visible {\n    /* border: solid 2px #ADB5BD; */\n    background-color: red;\n  }\n\n\n`;\n\nexport const TitleBrand = styled.Text`\n  font-family: 'Lato_400Regular';\n  font-size: 28px;\n\n\n`; \n\nexport const Container = styled.View`\n  flex: 1; \n\n  /* margin-top: ${Constants.statusBarHeight}px; */\n\n  background-color: #F8F9FA;\n  \n`;\n","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n\n\n  border-radius: 25px;\n  align-self: center;\n  /* overflow: hidden; */\n  margin: 15px 0;\n  /* background-color: red; */\n  justify-content: center;\n\n`;\n\nexport const TextBackground = styled.View`\n\n  z-index: 5;\n\n  height: auto;\n  padding: 10px;\n   \n  /* position: absolute; */\n\n  background-color: rgba(0, 0, 0, .45);\n  border-radius: 15px;\n\n  /* align-items: center; */\n  /* top: 50%; */\n  /* left: 50%; */\n  align-self: center;\n\n\n`;\nexport const Content = styled.Text`\n  color: white;\n\n  font-family: 'Lato_400Regular';\n  font-size: 18px; \n\n`;\nexport const BackgroundImage = styled.Image`\n  border-radius: 25px;\n  /* height: 350px; */\n\n`; ","import React from 'react';\n// import { translate } from 'react-native'\nimport { Container, TextBackground, Content, BackgroundImage } from './styles';\n\nimport {formatRelative} from 'date-fns'\n\nimport pt from 'date-fns/locale/pt';\n\nimport { View, Text, ImageBackground} from 'react-native';\n\nexport interface CardProps {\n  content: string; \n  date_created: string;\n  image_url: string;\n}\n\nconst Card: React.FC<CardProps> = ({date_created, content, image_url}) => {\n\n\n\n  return (\n    <Container>\n      <View style={{borderRadius: 25}} >\n        <ImageBackground source={{uri: image_url}} style={{width: 350, height: 350, justifyContent: 'center'}} imageStyle={{borderRadius: 25}}>\n          <TextBackground>\n            <Content>\n              {content}\n            </Content>\n          </TextBackground>\n        </ImageBackground>\n\n        <Text\n          style={{\n            width: 350,\n            alignSelf: 'center', \n            fontFamily: 'Lato_400Regular',\n            marginTop: 10,\n            fontSize: 14\n          }}\n        >{formatRelative(new Date(date_created), new Date(), { locale: pt })}</Text>\n      </View>\n\n    </Container>\n  );\n}\n\nexport default Card;","import React, { createContext, useState, useEffect, useContext, SetStateAction } from 'react';\n\nimport { Socket, io } from 'socket.io-client'\nimport api from '../services/api'; \n\n// import { io } from 'socket.io-client';\n\n\nexport interface Spotted {\n  image_url: string;\n  content: string; \n  id: string;\n  date_created: string;\n}\n\nexport interface IApplicationContext {\n  spotteds: Spotted[]; \n  filteredSpotteds: Spotted[]; \n  setFilteredSpotteds: React.Dispatch<SetStateAction<Spotted[]>>;\n  socket: Socket; \n  setSpotteds: React.Dispatch<SetStateAction<Spotted[]>>;\n\n}\n\nconst ApplicationContext = createContext({} as IApplicationContext); \n\nexport function useAppContext() {\n  const context = useContext(ApplicationContext); \n  return context;\n}\n\n\nconst ApplicationContextProvider: React.FC = ({children}) => {\n  \n  const [spotteds, setSpotteds] = useState<Spotted[]>([]);\n  const [showSpotteds, setShowSpotteds] = useState<Spotted[]>([]);\n  const [socket, setSocket] = useState({} as Socket); \n\n  \n  useEffect(() => { \n\n    const socket = io('https://spotted-wednesday.herokuapp.com/'); \n\n\n    socket.on('new_spotted', (data) => {\n      setSpotteds(current_spotteds => [data, ...current_spotteds])\n      setShowSpotteds(current_filtered_spotteds => [data, ...current_filtered_spotteds]); \n    })\n\n    setSocket(socket); \n\n    fetchSpotteds();\n\n  }, [])\n\n  async function fetchSpotteds() {\n    try {\n      const response = await api.get<Spotted[]>('/spotteds');\n\n      // console.log(response); \n\n      setSpotteds(response.data.reverse());\n      setShowSpotteds(response.data);\n\n    } catch(err) {\n      alert(\"um erro ocorreu enquanto carregavamos os spotteds\");\n      console.log(err);\n    }\n  }\n\n\n  return (\n    <ApplicationContext.Provider value={{\n      socket, \n      spotteds, \n      filteredSpotteds: showSpotteds, \n      setFilteredSpotteds: setShowSpotteds, \n      setSpotteds\n    }}>\n      {children}\n    </ApplicationContext.Provider>\n  )\n} \n\nexport default ApplicationContextProvider","import React, {useState} from 'react';\nimport api from '../../services/api'; \nimport { FlatList, RefreshControl } from 'react-native';\n\nimport { Container, Header, CreateSpottedButton, HeaderImage, TitleBrand, SearchInput } from './styles';\n\nimport { Feather } from '@expo/vector-icons'; \n\nimport Constants from 'expo-constants'\n\nimport Card from '../../components/Card';\nimport { useNavigation } from '@react-navigation/native';\nimport { useAppContext, Spotted } from '../../contexts/app.context';\n\nimport {formatRelative} from 'date-fns'\n\nimport pt from 'date-fns/locale/pt';\n\n\nconst Main: React.FC = () => {\n\n  const navigation = useNavigation();\n\n  // const [spotteds, setSpotteds ] = useState<Spotted[]>([] as Spotted[]); \n  const {spotteds, setFilteredSpotteds, filteredSpotteds, setSpotteds} = useAppContext();\n\n \n  const [searchQuery, setSearchQuery] = useState('');\n  const [refreshing, setRefreshing] = useState(false);\n\n  const handleRefresh = React.useCallback(async () => {\n    setRefreshing(true);\n\n    const response = await api.get('/spotteds'); \n\n    setSpotteds(response.data.reverse());\n    setFilteredSpotteds(response.data);\n\n    setRefreshing(false);\n\n  }, [refreshing])\n \n\n  function handleSearchSpotted(\n    text: string,\n    data: Spotted[], \n    updateData: React.Dispatch<React.SetStateAction<Spotted[]>> \n  ) {\n    if (text) {\n      // Inserted text is not blank\n      // Filter the masterDataSource and update FilteredDataSource\n      const newData = data.filter(\n        function (item) {\n          // Applying filter for the inserted text in search bar\n          // console.log(item.date_created);\n          const itemData = item.content \n              ? item.content.toUpperCase() + '-' + formatRelative(new Date(item.date_created), new Date(), { locale: pt }).toUpperCase()\n              : ''.toUpperCase();\n          const textData = text.toUpperCase();\n          return itemData.indexOf(textData) > -1;\n        }\n      );\n      updateData(newData);\n      setSearchQuery(text);\n    } else {\n      // Inserted text is blank\n      // Update FilteredDataSource with masterDataSource\n      updateData(spotteds);\n      setSearchQuery(text);\n    }\n\n  }\n\n\n\n  function handleNavigateToCreateSpotted() {\n    navigation.navigate(\"Criar Spotted\" as never); \n  }\n\n  return (\n    <Container style={{marginTop: Constants.statusBarHeight}}>\n      <Header>\n        <HeaderImage source={require('../../../assets/icon.png')} />\n        <TitleBrand>\n          Spotted\n        </TitleBrand>\n        <CreateSpottedButton onPress={handleNavigateToCreateSpotted}>\n          <Feather name=\"send\" size={28} color=\"black\" />\n        </CreateSpottedButton>\n      </Header>\n\n      <SearchInput \n        placeholder=\"Pesquisar nos spotteds...\" \n        onChangeText={\n            (text) => handleSearchSpotted(text, filteredSpotteds, setFilteredSpotteds)\n          }\n        value={searchQuery}\n      />\n      <FlatList \n        data={filteredSpotteds}\n        renderItem={({item}) => (\n          <Card\n            image_url={item.image_url}\n            content={item.content}\n            date_created={item.date_created}\n          />\n        )}\n        refreshControl={\n        <RefreshControl\n          refreshing={refreshing} \n          onRefresh={handleRefresh}\n        />}\n      />\n    </Container>\n  );\n}\n\nexport default Main;","import styled from 'styled-components/native';\n\nexport const Container = styled.View`\n  flex: 1;\n  align-items: center;\n  background-color: #F8F9FA;\n`;\n\nexport const BrandContainer = styled.View`\n\n  flex: 1; \n  /* align-items: center; */\n  padding-left: 23%;\n  /* justify-content: center; */\n`;\n\nexport const Header = styled.View`\n  flex-direction: row;\n  align-items: center;\n  width: 350px; \n  height: 60px;\n`;\nexport const ArrowBackButton = styled.TouchableOpacity`\n\n\n  align-items: center;\n  justify-content: center;\n`;\nexport const BrandTitle = styled.Text`\n  font-family: 'Lato_700Bold';\n  font-style: normal;\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 29px;\n`;\nexport const Title = styled.Text`\n  font-family: 'Lato_700Bold';\n  font-style: normal;\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 29px;\n\n  margin-bottom: 16px;\n`;\nexport const TextContainer = styled.View`\n  margin: 32px 0;\n  width: 350px; \n`;\nexport const Subtitle = styled.Text`\n  font-family: 'Lato_400Regular';\n\n  font-style: normal;\n  font-weight: normal;\n  font-size: 18px;\n  line-height: 22px;\n  /* identical to box height */\n\n  color: #ADB5BD;\n`;\nexport const TextArea = styled.TextInput`\n  flex: 1;\n  border: 1px solid #ADB5BD; \n  width: 350px;\n  border-radius: 25px; \n  padding: 24px; \n  font-size: 18px;\n  line-height: 22px;\n`;\nexport const Button = styled.TouchableOpacity`\n  height: 50px; \n  width: 350px;\n  border-radius: 25px;\n  background-color: #FE5E41;\n  align-items: center;\n  justify-content: center;\n\n  margin: 32px 0; \n\n`; \n\nexport const ButtonText = styled.Text`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 29px;\n  /* identical to box height */\n  font-family: 'Lato_400Regular';\n\n  color: #FFFFFF;\n`; ","import React, { useState } from 'react';\nimport { Alert, View } from 'react-native';\n\nimport { RouteProp, useNavigation, useRoute} from '@react-navigation/native'; \n\nimport Constants from 'expo-constants'\n\nimport { \n  Container,\n  Header,\n  ArrowBackButton,\n  BrandTitle,\n  Title,\n  TextContainer,\n  Subtitle,\n  TextArea,\n  Button, \n  ButtonText,\n  BrandContainer\n} from './styles';\n\nimport { Feather } from '@expo/vector-icons'; \n\nimport api from '../../services/api';\n\nimport { Socket,  } from 'socket.io-client'\nimport { useAppContext } from '../../contexts/app.context';\n\ntype CreateSpottedParams = {\n  socket: Socket\n}\n\nconst CreateSpotted: React.FC = () => {\n\n  const {socket} = useAppContext()\n\n  const [spottedContent, setSpottedContent] = useState('');\n  const [showWarningModal, setShowWarningModal] = useState(false);\n\n  const navigation = useNavigation();\n\n  function handleGoBack() {\n    navigation.goBack();\n  }\n\n  function handleCloseWarningModal() {\n    setShowWarningModal(false);\n  }\n\n  function handleOpenWarningModal() {\n\n    if (spottedContent.length == 0) {\n      \n      alert('spotted sem conteúdo');\n      return \n    }\n\n\n    Alert.alert('Atenção', 'Tem certeza que deseja enviar esse spotted?', [\n      {\n        onPress: () => {},\n        text: 'cancelar', \n        style: 'cancel'\n      },\n      {\n        onPress: handleSendSpottedContent,\n        text: 'enviar',\n        style: 'default'\n      },\n    ], {\n      cancelable: true,\n      onDismiss: () => {}\n    })\n  }\n\n  function handleUpdateTextArea(text: string) {\n    setSpottedContent(text);\n  }\n\n  async function handleSendSpottedContent() {\n    try {\n      // route.params.socket.emit('create_spotted', {content: spottedContent})\n\n      socket.emit('create_spotted', {content: spottedContent})\n\n      navigation.goBack();\n    } catch(err) {\n      alert(err);\n      console.log(err);\n    }\n  }\n\n  return (\n    <Container style={{marginTop: Constants.statusBarHeight}}>\n      <Header>\n        <ArrowBackButton\n          onPress={handleGoBack}\n        >\n          <Feather name=\"arrow-left\" size={28} color=\"black\" />\n        </ArrowBackButton>\n        <BrandContainer>\n          <BrandTitle>\n            Criar Spotted\n          </BrandTitle>\n        </BrandContainer>\n\n      </Header>\n\n      <TextContainer>\n        <Title>\n          Aqui você pode escrever o seu spotted.\n        </Title>\n        <Subtitle>\n          Os spotteds são completamente anônimos\n        </Subtitle>\n      </TextContainer>\n\n      <TextArea\n        multiline\n        numberOfLines={10}\n        style={{\n          textAlignVertical: 'top'\n        }}\n        onChangeText={handleUpdateTextArea}\n        placeholder=\"escreve aquela mensagem marota para o(a) crush...\"\n      ></TextArea>\n      <Button\n  \n      >\n        <ButtonText onPress={handleOpenWarningModal}>\n          Enviar Spotted\n        </ButtonText>\n      </Button>\n\n    </Container>\n  );\n}\n\nexport default CreateSpotted;","import React from 'react'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport Main from '../pages/Main'; \nimport CreateSpotted from '../pages/CreateSpotted';\n\nconst Stack = createStackNavigator();\n\nconst Routes: React.FC = () => {\n  return (\n    <NavigationContainer >\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={Main} options={{headerShown: false}}/>\n        <Stack.Screen name=\"Criar Spotted\" component={CreateSpotted} options={{headerShown: false}} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\n\nexport default Routes;","import React from 'react';\nimport AppLoading from 'expo-app-loading';\n\nimport { useFonts, Lato_400Regular, Lato_700Bold, Lato_900Black } from '@expo-google-fonts/lato';\n\nimport Routes from './src/routes'\nimport ApplicationContextProvider from './src/contexts/app.context'\n\n\nexport default function App() {\n\n  let [fontsLoaded] = useFonts({\n    Lato_400Regular, Lato_700Bold, Lato_900Black\n  }); \n\n  if (!fontsLoaded) {\n    return <AppLoading />\n  } else {\n    return (\n      <ApplicationContextProvider>\n        <Routes />\n      </ApplicationContextProvider>\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/icon.b6c6ddd6.png\";"],"sourceRoot":""}